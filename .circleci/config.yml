# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@8.1.2
  terraform: circleci/terraform@3.0.1

parameters:
  terraform-setup:
    type: string
    default: deploy/setup/same-story-api

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2004:202201-01
      docker_layer_caching: true # default - false
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    resource_class: xlarge
    steps:
      - checkout
      - run:
          name: "Make .env"
          command: |
            python3 make_env.py >.env
      - run:
          name: "Build"
          command: "docker-compose build"
      - run:
          name: "Start worker and test"
          command: "docker-compose up --exit-code-from test"
  deploy:
    machine:
      image: ubuntu-2004:202201-01
    steps:
      - run:
          name: "Checkout Terraform sources"
          command: |
            git clone git@github.com:engi-network/deploy.git
      - run:
          name: "Link SNS -> WebSocket Lambda function sources"
          command: |
            ln -s ../../../aws_sns_websocket << pipeline.parameters.terraform-setup >>
      - run:
          name: Create .terraformrc file locally
          command: |
            echo "credentials \"app.terraform.io\" {token =
            \"$TERRAFORM_TOKEN\"}" > $HOME/.terraformrc
      - terraform/install:
          arch: amd64
          os: linux
          terraform_version: 1.1.9
      - terraform/init:
          path: << pipeline.parameters.terraform-setup >>
      - terraform/apply:
          path: << pipeline.parameters.terraform-setup >>

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  build-test-push-workflow:
    jobs:
      - build-test:
          context:
            - aws
            - github
      - aws-ecr/build-and-push-image:
          requires:
            - build-test
          repo: "same-story-api"
          create-repo: true
          tag: "latest"
          registry-id: AWS_ID
          context:
            - aws
      - deploy:
          requires:
            - aws-ecr/build-and-push-image
          context:
            - github
            - terraform
